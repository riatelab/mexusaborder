lay("USA-Mexico border")
plot(st_geometry(deathsdor2), pch=20, col= "#eb3850", border ="#ede6bb", cex = 0.1, add=T)
plot(st_geometry(fences), col= "#3d3c3c", lwd = 3 ,add= T)
View(all)
pins <- makeIcon(
iconUrl = "../data/pin.svg",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 15, iconAnchorY = 15
)
library(leaflet)
pins <- makeIcon(
iconUrl = "../data/pin.svg",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 15, iconAnchorY = 15
)
m <- leaflet(all) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = 4, lat = 46, zoom = 06) %>%
addMarkers(~lng, ~lat, popup = ~year, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
View(all)
head(all)
iom <- read.csv("../data/iom/MissingMigrants-Global-2019-09-04T11-59-55.csv", stringsAsFactors = F)
iom <- iom[(iom$Location.Coordinates)!="",]
View(iom)
head(iom)
View(iom)
iom
iom <- iom[iom$Region.of.Incident =="US-Mexico Border",]
View(iom)
iom
colnames(iom)
iom <- iom[,c("Reported","Total.Dead.and.Missing","Location.Coordinates","Location.Descriptio","Cause.of.Death","Information.Source")]
iom <- iom[,c("Reported","Total.Dead.and.Missing","Location.Coordinates","Location.Descriptio","Cause.of.Death","Information.Source"),]
iom <- iom[,c("Reported","Total.Dead.and.Missing","Location.Coordinates","Location.Descriptio","Cause.of.Death","Information.Source",)]
iom <- iom[,c("Reported","Total.Dead.and.Missing","Location.Coordinates","Location.Descriptio","Cause.of.Death","Information.Source")]
colnames(iom)
iom <- iom[,c("Reported.Year","Total.Dead.and.Missing","Location.Coordinates","Location.Descriptio","Cause.of.Death","Information.Source")]
iom <- iom[,c("Reported.Year","Total.Dead.and.Missing","Location.Coordinates","Location.Description","Cause.of.Death","Information.Source")]
colnames(iom) <- c("year","deads","coords","location","cause","source")
iom
library(leaflet)
iom <- read.csv("../data/iom/MissingMigrants-Global-2019-09-04T11-59-55.csv", stringsAsFactors = F)
iom <- iom[(iom$Location.Coordinates)!="",]
iom <- iom[iom$Region.of.Incident =="US-Mexico Border",]
iom <- iom[,c("Reported.Year","Total.Dead.and.Missing","Location.Coordinates","Location.Description","Cause.of.Death","Information.Source")]
colnames(iom) <- c("year","deads","coords","location","cause","source")
View(iom)
iom <- read.csv("../data/iom/MissingMigrants-Global-2019-09-04T11-59-55.csv", stringsAsFactors = F)
iom <- iom[(iom$Location.Coordinates)!="",]
iom <- iom[iom$Region.of.Incident =="US-Mexico Border",]
latlon <- matrix(as.numeric(unlist(strsplit(iom$Location.Coordinates, split = ", "))), ncol = 2, byrow = T)
colnames(latlon) <- c("lat", 'lon')
iom <- cbind(iom, latlon)
iom <- iom[,c("Reported.Year","Total.Dead.and.Missing","lat","lon","Location.Description","Cause.of.Death","Information.Source")]
colnames(iom) <- c("year","deads","lat","lon","location","cause","source")
View(iom)
iom_unique <- all[all$deads == 1,]
iom_multi <-  all[all$deads > 1,]
iom_unique <- iom[iom$deads == 1,]
iom_multi <-  iom[iom$deads > 1,]
for (i in 1:dim(iom_multi)[1]){
nb <- as.numeric(iom_multi[i,"deads"])[1]
tmp <- iom_multi[i,]
tmp$deads <- 1
for (j in 1:nb){ iom_unique <- rbind(iom_unique,tmp)}
}
iom <- iom_unique
View(iom)
pins <- makeIcon(
iconUrl = "../data/pin.svg",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 15, iconAnchorY = 15
)
m <- leaflet(all) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = 4, lat = 46, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~year, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = 4, lat = 46, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~year, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -30, lat = 46, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~year, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~year, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~cause, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<p><b>year: ",iom$year,"</b></p>
<p><b>Cause of death: ",iom$cause,"</b></p>
<p><b>Source: ",iom$source,"</b></p>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<p><b>year: </b>",iom$year,"</p>
<p><b>Cause of death: </b>",iom$cause,"</p>
<p><b>Source: </b>",iom$source,"</p>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<b>year: </b>",iom$year,"<br/>
<b>Cause of death: </b>",iom$cause,"<br/>
<b>Source: </b>",iom$source,"<br/>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<h2>Cause of death: ",iom$cause,"</h2>
<b>year: </b>",iom$year,"<br/>
<b>location: </b>",iom$location,"<br/>
<b>Cause of death: </b>",iom$cause,"<br/>
<b>Source: </b>",iom$source,"<br/>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<h2>Cause of death: ",iom$cause,"</h2>
<h4>year: </b>",iom$year,"</h4>
<b>location: </b>",iom$location,"<br/>
<b>Source: </b>",iom$source,"<br/>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<h2>Cause of death: ",iom$cause,"</h2>
<h3>year: </b>",iom$year,"</h3>
<b>location: </b>",iom$location,"<br/>
<b>Source: </b>",iom$source,"<br/>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<h1>Cause of death: ",iom$cause,"</h1>
<h3>year: </b>",iom$year,"</h3>
<b>location: </b>",iom$location,"<br/>
<b>Source: </b>",iom$source,"<br/>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<h1>",iom$cause,"</h1>
<h3>year: </b>",iom$year,"<br/>
location: ",iom$location,"<br/>
Source: </b>",iom$source,"</h3>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
iom$label <- paste0(
"<h1>",iom$cause,"</h1>
<h3>year: </b>",iom$year,"<br/>
location: ",iom$location,"</h3>
<i>Source: ",iom$source,"</i>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldImagery) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$CartoDB.VoyagerLabelsUnder) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Thunderforest.Landscape) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$OpenStreetMap.Mapnik) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Thunderforest.Transport) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Stamen.Toner) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft")
m
# --------------------------------- #
#               DEAD                #
#           AND MISSING             #
#             MIGRANTS              #
# --------------------------------- #
library("sf")
library("rnaturalearth")
library("geojsonsf")
library("cartography")
library("cartogram")
library("SpatialPosition")
# ********************************
# ********** GEOMETRIES **********
# ********************************
prj <- "+proj=aea +lat_1=14.5 +lat_2=32.5 +lat_0=24 +lon_0=-105 +x_0=0 +y_0=0 +ellps=GRS80 +datum=NAD83 +units=m +no_defs"
# --- COUNTRIES ---
countries <- ne_countries(scale = 50, type = "countries", continent = NULL,
country = NULL, geounit = NULL, sovereignty = NULL,
returnclass = "sf")
countries <- countries[countries$adm0_a3 %in% c("MEX","USA"),]
countries <- st_transform(countries,crs = prj)
# --- FENCES ---
# https://data.world/carlvlewis/border-fence-boundaries-u-s-mexico
# https://www.revealnews.org/article/the-wall-building-a-continuous-u-s-mexico-barrier-would-be-a-tall-order/
fences <- geojson_sf("../data/data.world/border-fence.geojson")
fences <- st_transform(fences,crs = prj)
# --- RIVERS ---
rivers <- ne_download(scale = 50, type = "rivers_lake_centerlines", category = "physical", returnclass = "sf")
rivers <- st_transform(rivers,crs = prj)
# --- COASTS ---
coastline <- ne_download(scale = 50, type = "coastline", category = "physical", returnclass = "sf")
coastline <- st_transform(coastline,crs = prj)
# --- ocean ---
ocean <- ne_download(scale = 50, type = "ocean", category = "physical", returnclass = "sf")
ocean <- st_transform(ocean,crs = prj)
fences <- geojson_sf("../data/data.world/border-fence.geojson")
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences)
m
rivers <- ne_download(scale = 50, type = "rivers_lake_centerlines", category = "physical", returnclass = "sf")
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences) %>%
addPolylines(data = rivers)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, fill="red") %>%
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences) %>%
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences) %>%
m
library(leaflet)
# Data import and shaping
iom <- read.csv("../data/iom/MissingMigrants-Global-2019-09-04T11-59-55.csv", stringsAsFactors = F)
iom <- iom[(iom$Location.Coordinates)!="",]
iom <- iom[iom$Region.of.Incident =="US-Mexico Border",]
latlon <- matrix(as.numeric(unlist(strsplit(iom$Location.Coordinates, split = ", "))), ncol = 2, byrow = T)
colnames(latlon) <- c("lat", 'lon')
iom <- cbind(iom, latlon)
iom <- iom[,c("Reported.Year","Total.Dead.and.Missing","lat","lon","Location.Description","Cause.of.Death","Information.Source")]
colnames(iom) <- c("year","deads","lat","lon","location","cause","source")
fences <- geojson_sf("../data/data.world/border-fence.geojson")
# Disaggregation
iom_unique <- iom[iom$deads == 1,]
iom_multi <-  iom[iom$deads > 1,]
for (i in 1:dim(iom_multi)[1]){
nb <- as.numeric(iom_multi[i,"deads"])[1]
tmp <- iom_multi[i,]
tmp$deads <- 1
for (j in 1:nb){ iom_unique <- rbind(iom_unique,tmp)}
}
iom <- iom_unique
pins <- makeIcon(
iconUrl = "../data/pin.svg",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 15, iconAnchorY = 15
)
iom$label <- paste0(
"<h1>",iom$cause,"</h1>
<h3>year: </b>",iom$year,"<br/>
location: ",iom$location,"</h3>
<i>Source: ",iom$source,"</i>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences) %>%
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, fill = "red")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "red")
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "red", weight = 2)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "red", weight = 20)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "red", weight = 10)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "red", weight = 5)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "black", weight = 5)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "black", weight = 5, opacity = 1)
m
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "black", weight = 7, opacity = 1)
m
palRaster <- colorBin("Spectral", bins = 7, domain = iom$death, na.color = "transparent")
palRaster
plot(palRaster)
library("SpatialPosition")
res <- 25000
span <- 75000
plot(st_geometry(countries))
unk <- CreateGrid(w = as(iom_sf, 'Spatial'), res = res)
plot(iom_sf)
plot(st_geometry(iom_sf))
plot(st_geometry(unk), add=T)
plot(unk, add=T)
plot(st_geometry(iom_sf))
plot(unk, add=T)
plot(unk)
library(leaflet)
# Data import and shaping
iom <- read.csv("../data/iom/MissingMigrants-Global-2019-09-04T11-59-55.csv", stringsAsFactors = F)
iom <- iom[(iom$Location.Coordinates)!="",]
iom <- iom[iom$Region.of.Incident =="US-Mexico Border",]
latlon <- matrix(as.numeric(unlist(strsplit(iom$Location.Coordinates, split = ", "))), ncol = 2, byrow = T)
colnames(latlon) <- c("lat", 'lon')
iom <- cbind(iom, latlon)
iom <- iom[,c("Reported.Year","Total.Dead.and.Missing","lat","lon","Location.Description","Cause.of.Death","Information.Source")]
colnames(iom) <- c("year","deads","lat","lon","location","cause","source")
fences <- geojson_sf("../data/data.world/border-fence.geojson")
# Disaggregation
iom_unique <- iom[iom$deads == 1,]
iom_multi <-  iom[iom$deads > 1,]
for (i in 1:dim(iom_multi)[1]){
nb <- as.numeric(iom_multi[i,"deads"])[1]
tmp <- iom_multi[i,]
tmp$deads <- 1
for (j in 1:nb){ iom_unique <- rbind(iom_unique,tmp)}
}
iom <- iom_unique
pins <- makeIcon(
iconUrl = "../data/pin.svg",
iconWidth = 30, iconHeight = 30,
iconAnchorX = 15, iconAnchorY = 15
)
iom$label <- paste0(
"<h1>",iom$cause,"</h1>
<h3>year: </b>",iom$year,"<br/>
location: ",iom$location,"</h3>
<i>Source: ",iom$source,"</i>"
)
m <- leaflet(iom) %>%
addProviderTiles(providers$Esri.WorldStreetMap) %>%
setView(lng = -104, lat = 30, zoom = 06) %>%
addMarkers(~lon, ~lat, popup = ~label, clusterOptions = markerClusterOptions(), icon = pins ) %>%
addScaleBar(position = "bottomleft") %>%
addPolylines(data = fences, color = "black", weight = 7, opacity = 1)
m
library("SpatialPosition")
res <- 25000
span <- 75000
unk <- CreateGrid(w = as(iom, 'Spatial'), res = res)
library("SpatialPosition")
res <- 25000
span <- 75000
unk <- CreateGrid(w = as(iom, 'Spatial'), res = res)
unk <- CreateGrid(w = as(iom_sf, 'Spatial'), res = res)
class(unk)
plot(unk)
# --- MAP 5 : SMOOTH ---
View(iom_sf)
x <- smoothLayer(x = iom_sf, var = 'deads',
span = 4000, beta = 2,
mask = mtq, border = NA,
col = carto.pal(pal1 = 'wine.pal', n1 = 8),
legend.title.txt = "Population\nPotential",
legend.pos = "topright", legend.values.rnd = 0)
x <- smoothLayer(x = iom_sf, var = 'deads',
span = 4000, beta = 2,
mask = countries, border = NA,
col = carto.pal(pal1 = 'wine.pal', n1 = 8),
legend.title.txt = "Population\nPotential",
legend.pos = "topright", legend.values.rnd = 0)
x <- smoothLayer(x = iom_sf, var = 'deads',
span = 1000, beta = 2,
mask = countries, border = NA,
col = carto.pal(pal1 = 'wine.pal', n1 = 8),
legend.title.txt = "Population\nPotential",
legend.pos = "topright", legend.values.rnd = 0)
plot(st_geometry(x))
